<?xml version="1.0" encoding="UTF-8" ?>
<icegrid>
    <application name="sequences.SequenceServiceApp-V1">
        <server-template id="SequenceServiceTemplate">
            <parameter name="index" default="0"/>
            <parameter name="endpoints"/>
            <parameter name="order-endpoints"/>
            <icebox id="sequences.SequenceServiceSvr${index}-V1" activation="always" exe="icebox" pwd="/home/demo/tddl_sequence${index}">
                <env>LD_LIBRARY_PATH=.:lib:/usr/local/thirdparty/glog/lib:/usr/local/Ice-3.6.3/lib64:/usr/local/zkclient/lib:$LD_LIBRARY_PATH</env>
                <env>seq.configFile=conf/sequence.properties</env>
                <properties>
                    <properties refid="MultiThreaded"/>
                </properties>
                <service name="tddl.sequences.SequenceService" entry="tddl_sequence_SequenceServiceI:create">
                    <adapter name="tddl.sequences.SequenceService-V1" endpoints="${endpoints}" id="tddl.sequences.SequenceServiceAdapter${index}-V1" register-process="true" replica-group="SequenceServiceRep-V1" server-lifetime="false"/>
                    <adapter name="tddl.sequences.OrderSequenceService-V1" endpoints="${order-endpoints}" id="tddl.sequences.OrderSequenceServiceAdapter${index}-V1" register-process="true" replica-group="OrderSequenceServiceRep-V1" server-lifetime="false"/>
                    <properties>
                        <property name="IceMX.Metrics.Debug.GroupBy" value="id"/>
                        <property name="IceMX.Metrics.Debug.Disabled" value="0"/>
                        <property name="IceMX.Metrics.ByParent.GroupBy" value="parent"/>
                        <property name="IceMX.Metrics.ByParent.Disabled" value="0"/>
                    </properties>
                </service>
            </icebox>
        </server-template>
        <replica-group id="SequenceServiceRep-V1">
            <load-balancing type="round-robin" n-replicas="0"/>
            <object identity="tddl.sequences.SequenceService-V1" type="::tddl::sequences::SequenceService"/>
        </replica-group>
        <replica-group id="OrderSequenceServiceRep-V1">
            <load-balancing type="round-robin" n-replicas="0"/>
            <object identity="tddl.sequences.OrderSequenceService-V1" type="::tddl::sequences::OrderSequenceService"/>
        </replica-group>
        <properties id="MultiThreaded">
            <property name="Ice.PrintStackTraces" value="1"/>
            <property name="IceSSL.Trace.Security" value="2"/>
            <property name="IceGrid.Registry.DynamicRegistration" value="1"/>
            <property name="Ice.Trace.Network" value="1"/>
            <property name="IceBox.Trace.ServiceObserver" value="1"/>
            <property name="Ice.ThreadPool.Client.SizeWarn" value="25"/>
            <property name="Ice.ThreadPool.Client.SizeMax" value="30"/>
            <property name="Ice.ThreadPool.Server.Size" value="50"/>
            <property name="Ice.ThreadPool.Server.SizeWarn" value="550"/>
            <property name="Ice.ThreadPool.Server.SizeMax" value="600"/>
            <property name="IceBox.InheritProperties" value="1"/>
            <property name="Ice.Override.ConnectTimeout" value="5000"/>
            <property name="Ice.Override.Timeout" value="10000"/>
            <property name="IceBox.Trace.ServiceObserver" value="1"/>
            <property name="Ice.Default.LocatorCacheTimeout" value="300"/>
            <property name="Ice.BackgroundLocatorCacheUpdates" value="1"/>
        </properties>
        <node name="glacier2test">
            <server-instance index="0" endpoints="tcp" order-endpoints="tcp" template="SequenceServiceTemplate" />
            <server-instance index="1" endpoints="tcp" order-endpoints="tcp" template="SequenceServiceTemplate" />
        </node>
    </application>
</icegrid>
